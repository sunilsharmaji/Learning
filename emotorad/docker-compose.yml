version: "3.3"

services:
  sql-db:
    build:
      context: ./sql-db
    environment:
      MYSQL_ROOT_PASSWORD: codingchallenge
      MYSQL_DATABASE: codingchallenge
      MYSQL_USER: codingchallenge
      MYSQL_PASSWORD: codingchallenge
    ports:
      - "8322:3306"
    networks:
      - backend-emotorad
  php-fpm:
    depends_on:
      - sql-db
      - nginx_backend
    build: ./php-fpm
    restart: always
    environment:
      MYSQL_DB_HOST: sql-db
      MYSQL_DB_PORT: 3306
      MYSQL_DB_USER: codingchallenge
      MYSQL_DB_PASSWORD: codingchallenge
      MYSQL_DATABASE: codingchallenge
      DATABASE_URL: mysql://codingchallenge:codingchallenge@sql-db:3306/codingchallenge
    networks:
      - backend-emotorad
    volumes:
      - sock:/sock
      - ./app:/var/www
    links:
      - sql-db
  nginx_backend:
    build:
      context: ./nginx-backend
    ports:
      - "8321:80"
    volumes:
      - ./app:/var/www:ro
      - sock:/sock
    networks:
      - backend-emotorad
    restart: always
  emqx:
    image: emqx/emqx
    ports:
      - "1883:1883"
      - "8083:8083"
    networks:
      - backend-emotorad

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend-emotorad

  # mqtt-publisher:
  #   build:
  #     context: .
  #     dockerfile: ./dockerfiles/publisher.Dockerfile
  #   depends_on:
  #     - emqx
  #   links:
  #     - emqx

  mqtt-subscriber:
    build:
      context: .
      dockerfile: ./dockerfiles/subscriber.Dockerfile
    depends_on:
      - emqx
      - redis
    links:
      - emqx
      - redis
    networks:
      - backend-emotorad
volumes:
  sock:

networks:
  backend-emotorad:
